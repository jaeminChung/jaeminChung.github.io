---
layout: post
title:  "컴파일러"
date:   2019-01-04 22:35:13
categories: programming
permalink: /archivers/compiler
use_math: true
---
1. 형식 언어 formal language
2. 형식 문법 formal grammar
   1. 논터미널 기호
   2. 터미널 기호
3. 문법의 종류
   1. 무제약 unrestricted 문법 : 튜링 기계 turing machine
   2. 문맥인식 context-sensitive 문법 : 선형한계 오토마타 linear-bounded automata
   3. 문맥자유 context-free 문법 : 푸시다운 오토마타 push-down automata
   4. 정규 regular 문법 : 유한 오토마타 finite automata
4. 표기법
   1. BNF Backus-Naur Form
   2. EBNF Extended BNF
5. ![automata]({{ site.url }}/assets/automata.png)

   $$
   M = (Q, \sum, \delta, q_0, F) \\\\
   단, Q = \{ q_0, q_1, q_2, q_3 \} \\\\
   \sum = \{ a, b \} \\\\
   \delta : \delta (q_0, a) = \{ q_0, q_1 \} \\\\
   \delta (q_0, b) = \{ q_0 \} \\\\
   \delta (q_1, b) = \{ q_2 \} \\\\
   \delta (q_2, b) = \{ q_3 \} \\\\   
   q_0 = q_0 \\\\
   F = \{ q_3 \}
   $$
6. 모호한 문법을 모호하지 않은 문법으로
``` ebnf
   1.1 P : E -> E + E | E - E | E * E | E / E | E ^ E | -E | (E) | id  
   1.2 E -> E + T | E - T | T  
       T -> T * F | T / F | 
       F -> P^F | 
       P -> -P | H  
       H -> (E) | id
   2.1 stat -> if expr then stat  
             | if expr then stat else stat  
             | other  
   2.2 stat -> matched  
             | unmatched  
       matched -> if expr then matched else matched  
               | other  
       unmatched -> if expr then stat  
                 | if expr then matched else unmatched  
```                 